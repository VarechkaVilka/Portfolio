import React, { useState, createContext, useContext } from 'react';
import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';
import './Portfolio.css';
import myVideo from './img/mag.webm';

const ThemeContext = createContext();

const useTheme = () => useContext(ThemeContext);


const ThemeProvider = ({ children }) => {
  const [theme, setTheme] = useState('light'); 

  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
};


function ThemeSwitcher() {
  const { theme, toggleTheme } = useTheme();

  return (
    <button onClick={toggleTheme} className='glow-on-hover'>
      {theme === 'light' ? '–¢—å–º–∞' : '–°–≤–µ—Ç'}
    </button>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ì–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function Home() {
  const { theme } = useTheme();
  return (
    <section className={`home ${theme}`}>
      <h2>–ü—Ä–∏–≤–µ—Ç! –Ø –í–∏–ª–∫–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞</h2>
      <p>–§—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —Å—Ç—É–¥–µ–Ω—Ç–∫–∞ 2 –∫—É—Ä—Å–∞ –ú–ò–î–∏–°–∞. –≠—Ç–æ –º–æ–π —Å–∞–π—Ç –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.</p>
      <video autoPlay src={myVideo} type="video/webm">
        –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
      </video>
    </section>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –°—Ç—Ä–∞–Ω–∏—Ü—ã –ü—Ä–æ–µ–∫—Ç–æ–≤
function Projects() {
  const { theme } = useTheme();
  const projectsData = [
    {
      id: 1,
      title: 'Mini-apps ART-VICTORINAüíó',
      description: '–ú–∏–Ω–∏ –≤–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React',
      repoLink: '',
      demoLink: 'https://vk.com/app51744525', 
    },
    {
      id: 2,
      title: 'Mini-apps –•–æ—Ç–µ–ª–∫–∏',
      description: '–ú–∏–Ω–∏ –≤–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React',
      repoLink: '', 
      demoLink: 'https://vk.com/app52426399', 
    },
    {
      id: 3,
      title: '–ê–°–£ –ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞',
      description: 'Windows Forms —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º MySql',
      repoLink: 'https://github.com/VarechkaVilka/ACU.git',
      demoLink: '', 
    },
  ];

  return (
    <section className={`projects ${theme}`}>
      <h2>Projectsüíó</h2>
      <div className="project-grid">
        {projectsData.map((project) => (
          <div className={`project-item ${theme}`} key={project.id}>
            <div className="project-details">
              <h3>{project.title}</h3>
              <p>{project.description}</p>
              <div className="project-links">
      {project.repoLink ? (
        <a href={project.repoLink} target="_blank" rel="noopener noreferrer">
          REPOSITORY
        </a>
      ) : (
        <span className="disabled-link">REPOSITORY</span>
      )}

      {project.demoLink ? (
        <a href={project.demoLink} target="_blank" rel="noopener noreferrer">
          DEMO
        </a>
      ) : (
        <span className="disabled-link">DEMO</span>
      )}
    </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –°—Ç—Ä–∞–Ω–∏—Ü—ã –ù–∞–≤—ã–∫–æ–≤

function Skills() {
  const { theme } = useTheme();
  const skillsData = [
    { name: 'HTML', description: '–û—Å–Ω–æ–≤–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü, —Ä–∞–∑–º–µ—Ç–∫–∞, —Ç–µ–≥–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Å–µ–º–∞–Ω—Ç–∏–∫–∞.' },
    { name: 'CSS', description: '–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü, –∫–∞—Å–∫–∞–¥–Ω–æ—Å—Ç—å, —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, —Å–≤–æ–π—Å—Ç–≤–∞, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω' },
    { name: 'JavaScript', description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü.' },
    { name: 'React', description: '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM, JSX.' },
    { name: 'C#', description: '–û–û–ü, SOLID, WinForm, WPF' },
    { name: 'Git', description: '–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π, –≤–µ—Ç–≤–ª–µ–Ω–∏–µ, —Å–ª–∏—è–Ω–∏–µ, —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.' },
    { name: '1C', description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ.' },
  ];

  return (
    <section className={`skills ${theme}`}>
      <h2>–ù–∞–≤—ã–∫–∏</h2>
      <div className="skill-list">
        {skillsData.map((skill) => (
          <div className="skill-item" key={skill.name}>
            <div className="skill-header">
              {skill.name}
            </div>
            <div className="skill-content">
              <p>{skill.description}</p>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
}


// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –°—Ç—Ä–∞–Ω–∏—Ü—ã –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤
function Contact() {
  const { theme } = useTheme();
  const handleSubmit = (event) => {
    event.preventDefault();
    const name = event.target.name.value;
    const email = event.target.email.value;
    const message = event.target.message.value;

    if (!name || !email || !message) {
      alert('–û—à–∏–±–æ—á–∫–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
      return;
    }

    console.log('–ò–º—è:', name);
    console.log('Email:', email);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', message);
    alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ,–∫–æ—Ç–∏–∫!');

    event.target.reset();
  };

  return (
    <section className={`contact ${theme}`}>
      <h2 className='contact-h2'>–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π</h2>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name">–ò–º—è:</label>
            <input type="text" id="name" name="name" />
          </div>
        <div className="form-group">
          <label htmlFor="email">Email:</label>
          <input type="email" id="email" name="email" />
        </div>
        <div className="form-group">
          <label htmlFor="message">–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
          <textarea id="message" name="message"></textarea>
        </div>
        <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
      </form>
    </section>
  );
}

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Portfolio
function Portfolio() {
  const { theme } = useTheme(); 
  return (
    <Router>
      <div className={`portfolio ${theme}`}>
        <header>
          <h1>SEXUALKA</h1>
          <nav>
            <ul>
              <li>
                <Link to="/" className='link-li'>–ì–ª–∞–≤–Ω–∞—è</Link>
              </li>
              <li>
                <Link to="/projects" className='link-li'>–ü—Ä–æ–µ–∫—Ç—ã</Link>
              </li>
              <li>
                <Link to="/skills" className='link-li'>–ù–∞–≤—ã–∫–∏</Link>
              </li>
              <li>
                <Link to="/contact" className='link-li'>–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link>
              </li>
              <li>
                <ThemeSwitcher /> 
              </li>
            </ul>
          </nav>
        </header>

        <main>
          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/projects" element={<Projects />} />
            <Route path="/skills" element={<Skills />} />
            <Route path="/contact" element={<Contact />} />
          </Routes>
        </main>

        <footer>
          <p>¬© {new Date().getFullYear()}–í–∏–ª–∫–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞</p>
        </footer>
      </div>
    </Router>
  );
}

function App() {
  return (
    <ThemeProvider>
      <Portfolio />
    </ThemeProvider>
  );
}

export default App;
